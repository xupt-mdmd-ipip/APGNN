(py39pt) XUPT@XUPT-115:~/project/test/15IEEE_TNNLS_Gia-CFSL-main/IEEE_TNNLS_Gia-CFSL-main$ python train_Gia-CFSL.py --config config/Indian_pines.py
dict_keys(['data', 'Labels', 'set', 'index'])
[ 5  0  8 ...  6 13 15]
source domain data_train.shape： (77592, 9, 9, 128)
source domain labels_train.shape: (77592,)
keys_all_train： [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
label_encoder_train: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18}
train_set.keys()： dict_keys([5, 0, 8, 13, 7, 6, 4, 17, 10, 1, 3, 12, 16, 14, 2, 9, 11, 15, 18])

Num classes for source domain datasets: 19
dict_keys([5, 0, 8, 13, 7, 6, 4, 17, 10, 1, 3, 12, 16, 14, 2, 9, 11, 15, 18])
the number of class: 18
the number of sample: 3600

Num classes of the number of class larger than 200: 18
18 dict_keys([5, 0, 8, 13, 7, 6, 4, 17, 10, 1, 3, 12, 16, 14, 2, 9, 11, 15])
source_imdb[data].shape： (77592, 9, 9, 128)
source_imdb[data].shape： (9, 9, 128, 77592)
source_imdb[Labels]： [ 5  0  8 ...  6 13 15]
indian_pines_corrected 145 145 200
/home/XUPT/project/test/15IEEE_TNNLS_Gia-CFSL-main/IEEE_TNNLS_Gia-CFSL-main/train_Gia-CFSL.py:548: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  class_map = np.zeros((nDataSet,), dtype=np.object)
/home/XUPT/project/test/15IEEE_TNNLS_Gia-CFSL-main/IEEE_TNNLS_Gia-CFSL-main/train_Gia-CFSL.py:549: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  feature_emb_cell = np.zeros((nDataSet,), dtype=np.object)
/home/XUPT/project/test/15IEEE_TNNLS_Gia-CFSL-main/IEEE_TNNLS_Gia-CFSL-main/train_Gia-CFSL.py:550: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  test_labels_cell = np.zeros((nDataSet,), dtype=np.object)
emb_size0: 128
num_generation: 1
patch_size: 9
seeds: 1336

Data_Band_Scaler.shape： (145, 145, 200)
number of sample 10249
labeled number per class: 5
40.0
40

the number of train_indices训练集个数: 80
the number of test_indices测试集个数: 10169
the number of train_indices after data argumentation: 3200
labeled sample indices训练集为: [6168, 5765, 5684, 5767, 5850, 7364, 2486, 1629, 2584, 1312, 5457, 9335, 1075, 9426, 9774, 2170, 2358, 3531, 2172, 3638, 6934, 6426, 7142, 9358, 6186, 3658, 8037, 396096, 4995, 6501, 6253, 6255, 6336, 6592, 4759, 3411, 4048, 3620, 2551, 5703, 5876, 5622, 5376, 5961, 4715, 4502, 4081, 5671, 527, 6636, 6206, 7550, 8055, 5838, 620, 691, 231, 158, 940, 8902, 9210, 8695, 9124, 8970, 9195, 9892, 2759, 9467, 8813, 885, 1635, 1402, 239, 389, 1886, 1840, 1579, 1931, 1419]

imdb[data].shape, imdb[Labels].shape, imdb[set].shape
before (9, 9, 200, 10249) (10249,) (10249,)
imdb[data].shape, imdb[Labels].shape, imdb[set].shape
after (9, 9, 200, 10249) (10249,) (10249,)
Data is OK.
imdb_da_train[data].shape, imdb_da_train[Labels].shape, imdb_da_train[set].shape
before (9, 9, 200, 3200) (3200,) (3200,)
imdb_da_train[data].shape, imdb_da_train[Labels].shape, imdb_da_train[set].shape
after (9, 9, 200, 3200) (3200,) (3200,)
ok

before
train_loader <torch.utils.data.dataloader.DataLoader object at 0x7f631afda370>
test_loader <torch.utils.data.dataloader.DataLoader object at 0x7f631afda550>
G (153, 153)
RandPerm (10249,)
Row (10249,)
Column (10249,)
nTrain 80

train labels:
 tensor([ 0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  3,  3,  3,
         3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  7,
         7,  7,  7,  7,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9, 10, 10, 10, 10,
        10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14,
        14, 14, 14, 15, 15, 15, 15, 15])
size of train datas: torch.Size([80, 200, 9, 9])
imdb_da_train.keys() dict_keys(['data', 'Labels', 'set'])
imdb_da_train[data].shape (9, 9, 200, 3200)
imdb_da_train[Labels] [ 0  0  0 ... 15 15 15]
target_da_datas.shape: (3200, 200, 9, 9)
target data augmentation label: [ 0  0  0 ... 15 15 15]
dict_keys([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])
imdb_da_train[data].shape: (9, 9, 200, 3200)
imdb_da_train[Labels]: [ 0  0  0 ... 15 15 15]

after
train_loader <torch.utils.data.dataloader.DataLoader object at 0x7f631afda370>
test_loader <torch.utils.data.dataloader.DataLoader object at 0x7f631afda550>
G (153, 153)
RandPerm (10249,)
Row (10249,)
Column (10249,)
nTrain 80
Training...
